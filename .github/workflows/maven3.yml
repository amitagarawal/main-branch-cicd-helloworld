name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: com-fsta-cicd-helloworld
          args: >
            -Dsonar.organization=org-hello-world
            -Dsonar.projectKey=hello-world3
            -Dsonar.sources=src
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file SimpleInterestCalc2/pom.xml







# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

#name: Java CI with Maven3

#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

#jobs:
#  build:

#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 11
#      uses: actions/setup-java@v2
#      with:
#        java-version: '11'
#        distribution: 'adopt'
#    - name: Build with Maven
#      run: mvn -B package --file com-fsta-cicd-helloworld/pom.xml
#    - name: Test with Maven
#      run: mvn -B test --file com-fsta-cicd-helloworld/pom.xml  
#    - name: Publish Unit Test Results
#      uses: EnricoMi/publish-unit-test-result-action/composite@v1
#      if: always()
#      with:
#        files: com-fsta-cicd-helloworld/target/surefire-reports/**/*.xml
#    - name: Send email
#      uses: ./ #dawidd6/action-send-mail@v3
#      with:
#        # Required mail server address:
#        server_address: smtp.gmail.com
#        # Required mail server port:
#        server_port: 465
#        # Required mail server username:
#        username: amit.agarawal@gmail.com
#        # Required mail server password:
#        password: dhoopshade@1
#        # Required mail subject:
#        subject: Github Actions job result
#        # Required recipients' addresses:
#        to: amit.agarawal@gmail.com
#        # Required sender full name (address can be skipped):
#        from: Amit agarawal # <user@example.com>
#        # Optional whether this connection use TLS (default is true if server_port is 465)
#        secure: true
#        # Optional plain body:
#        body: Build job completed successfully!
#        # Optional HTML body read from file:
#        #html_body: file://README.html
#        # Optional carbon copy recipients:
#        #cc: kyloren@example.com,leia@example.com
#        # Optional blind carbon copy recipients:
#        #bcc: r2d2@example.com,hansolo@example.com
#        # Optional recipient of the email response:
#        #reply_to: luke@example.com
#        # Optional unsigned/invalid certificates allowance:
#        ignore_cert: true
#        # Optional converting Markdown to HTML (set content_type to text/html too):
#        convert_markdown: true
#        # Optional attachments:
#        attachments: com-fsta-cicd-helloworld/target/surefire-reports/TEST-GreetingTest.xml

